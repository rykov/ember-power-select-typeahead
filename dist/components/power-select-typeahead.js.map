{"version":3,"file":"power-select-typeahead.js","sources":["../../src/components/power-select-typeahead.hbs","../../src/components/power-select-typeahead.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"<PowerSelect\\n  @afterOptionsComponent={{@afterOptionsComponent}}\\n  @allowClear={{@allowClear}}\\n  @animationEnabled={{@animationEnabled}}\\n  @ariaDescribedBy={{@ariaDescribedBy}}\\n  @ariaInvalid={{@ariaInvalid}}\\n  @ariaLabel={{@ariaLabel}}\\n  @ariaLabelledBy={{@ariaLabelledBy}}\\n  @beforeOptionsComponent={{this.beforeOptionsComponent}}\\n  @buildSelection={{@buildSelection}}\\n  @closeOnSelect={{@closeOnSelect}}\\n  @defaultHighlighted={{@defaultHighlighted}}\\n  @destination={{@destination}}\\n  @disabled={{@disabled}}\\n  @dropdownClass={{this.concatenatedDropdownClasses}}\\n  @extra={{@extra}}\\n  @groupComponent={{@groupComponent}}\\n  @horizontalPosition={{@horizontalPosition}}\\n  @initiallyOpened={{@initiallyOpened}}\\n  @loadingMessage={{this.loadingMessage}}\\n  @matcher={{@matcher}}\\n  @matchTriggerWidth={{@matchTriggerWidth}}\\n  @noMatchesMessage={{this.noMatchesMessage}}\\n  @onBlur={{@onBlur}}\\n  @onChange={{@onChange}}\\n  @onClose={{@onClose}}\\n  @onFocus={{@onFocus}}\\n  @onInput={{@onInput}}\\n  @onKeydown={{this.onKeyDown}}\\n  @onOpen={{@onOpen}}\\n  @options={{@options}}\\n  @optionsComponent={{@optionsComponent}}\\n  @placeholder={{@placeholder}}\\n  @preventScroll={{@preventScroll}}\\n  @registerAPI={{@registerAPI}}\\n  @renderInPlace={{@renderInPlace}}\\n  @search={{@search}}\\n  @searchEnabled={{@searchEnabled}}\\n  @searchField={{@searchField}}\\n  @searchMessage={{@searchMessage}}\\n  @searchPlaceholder={{@searchPlaceholder}}\\n  @selected={{@selected}}\\n  @selectedItemComponent={{@selectedItemComponent}}\\n  @tabindex={{this.tabindex}}\\n  @triggerClass={{this.concatenatedTriggerClasses}}\\n  @triggerComponent={{this.triggerComponent}}\\n  @triggerId={{@triggerId}}\\n  @triggerRole={{false}}\\n  @verticalPosition={{@verticalPosition}}\\n  @calculatePosition={{@calculatePosition}}\\n  ...attributes\\n  as |option term|>\\n  {{yield option term}}\\n</PowerSelect>\\n\")","import Trigger from './power-select-typeahead/trigger.js';\nimport { ensureSafeComponent } from '@embroider/util';\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\n\nconst noopKeyDown = () => {};\n\nexport default class PowerSelectTypeahead extends Component {\n  // Args w/ defaults\n  constructor() {\n    super(...arguments);\n    const triggerComponent = this.args.triggerComponent || Trigger;\n    this.triggerComponent = ensureSafeComponent(triggerComponent);\n    this.beforeOptionsComponent = this.args.beforeOptionsComponent || null;\n    this.noMatchesMessage = this.args.noMatchesMessage || null;\n    this.loadingMessage = this.args.loadingMessage || null;\n    this.tabindex = this.args.tabindex || -1;\n  }\n\n  // CPs\n  get concatenatedTriggerClasses() {\n    let classes = ['ember-power-select-typeahead-trigger'];\n    let passedClass = this.args.triggerClass;\n    if (passedClass) {\n      classes.push(passedClass);\n    }\n    return classes.join(' ');\n  }\n\n  get concatenatedDropdownClasses() {\n    let classes = ['ember-power-select-typeahead-dropdown'];\n    let passedClass = this.args.dropdownClass;\n    if (passedClass) {\n      classes.push(passedClass);\n    }\n    return classes.join(' ');\n  }\n\n  @action onKeyDown(select, e) {\n    let action = this.args.onkeydown || noopKeyDown;\n\n    // if user passes `onkeydown` action\n    if (action && action(select, e) === false) {\n      return false;\n    } else {\n      // if escape, then clear out selection\n      if (e.keyCode === 27) {\n        select.actions.choose(null);\n      }\n    }\n  }\n}\n"],"names":["noopKeyDown","PowerSelectTypeahead","Component","constructor","arguments","triggerComponent","args","Trigger","ensureSafeComponent","beforeOptionsComponent","noMatchesMessage","loadingMessage","tabindex","concatenatedTriggerClasses","classes","passedClass","triggerClass","push","join","concatenatedDropdownClasses","dropdownClass","onKeyDown","select","e","action","onkeydown","keyCode","actions","choose","n","this","prototype","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,+1DAA+1D;;ACIj4D,MAAMA,WAAW,GAAGA,MAAM,EAAE,CAAA;AAEb,MAAMC,oBAAoB,SAASC,SAAS,CAAC;AAC1D;AACAC,EAAAA,WAAWA,GAAG;IACZ,KAAK,CAAC,GAAGC,SAAS,CAAC,CAAA;IACnB,MAAMC,gBAAgB,GAAG,IAAI,CAACC,IAAI,CAACD,gBAAgB,IAAIE,2BAAO,CAAA;AAC9D,IAAA,IAAI,CAACF,gBAAgB,GAAGG,mBAAmB,CAACH,gBAAgB,CAAC,CAAA;IAC7D,IAAI,CAACI,sBAAsB,GAAG,IAAI,CAACH,IAAI,CAACG,sBAAsB,IAAI,IAAI,CAAA;IACtE,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACJ,IAAI,CAACI,gBAAgB,IAAI,IAAI,CAAA;IAC1D,IAAI,CAACC,cAAc,GAAG,IAAI,CAACL,IAAI,CAACK,cAAc,IAAI,IAAI,CAAA;IACtD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACN,IAAI,CAACM,QAAQ,IAAI,CAAC,CAAC,CAAA;AAC1C,GAAA;;AAEA;EACA,IAAIC,0BAA0BA,GAAG;AAC/B,IAAA,IAAIC,OAAO,GAAG,CAAC,sCAAsC,CAAC,CAAA;AACtD,IAAA,IAAIC,WAAW,GAAG,IAAI,CAACT,IAAI,CAACU,YAAY,CAAA;AACxC,IAAA,IAAID,WAAW,EAAE;AACfD,MAAAA,OAAO,CAACG,IAAI,CAACF,WAAW,CAAC,CAAA;AAC3B,KAAA;AACA,IAAA,OAAOD,OAAO,CAACI,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;EAEA,IAAIC,2BAA2BA,GAAG;AAChC,IAAA,IAAIL,OAAO,GAAG,CAAC,uCAAuC,CAAC,CAAA;AACvD,IAAA,IAAIC,WAAW,GAAG,IAAI,CAACT,IAAI,CAACc,aAAa,CAAA;AACzC,IAAA,IAAIL,WAAW,EAAE;AACfD,MAAAA,OAAO,CAACG,IAAI,CAACF,WAAW,CAAC,CAAA;AAC3B,KAAA;AACA,IAAA,OAAOD,OAAO,CAACI,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AAEQG,EAAAA,SAASA,CAACC,MAAM,EAAEC,CAAC,EAAE;IAC3B,IAAIC,MAAM,GAAG,IAAI,CAAClB,IAAI,CAACmB,SAAS,IAAIzB,WAAW,CAAA;;AAE/C;IACA,IAAIwB,MAAM,IAAIA,MAAM,CAACF,MAAM,EAAEC,CAAC,CAAC,KAAK,KAAK,EAAE;AACzC,MAAA,OAAO,KAAK,CAAA;AACd,KAAC,MAAM;AACL;AACA,MAAA,IAAIA,CAAC,CAACG,OAAO,KAAK,EAAE,EAAE;AACpBJ,QAAAA,MAAM,CAACK,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;AAC7B,OAAA;AACF,KAAA;AACF,GAAA;AAAC,EAAA;AAAAC,IAAAA,CAAA,CAAAC,IAAA,CAAAC,SAAA,gBAZAP,MAAM,CAAA,CAAA,CAAA;AAAA,GAAA;AAaT,CAAA;AAACQ,oBAAA,CAAAC,QAAA,EA5CoBhC,oBAAoB,CAAA;;;;"}